plugins {
    id 'checkstyle'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "io.freefair.lombok" version "5.2.1"
    id 'java'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'pmd'
}

def checkstyleVersion = '8.+'
def pmdVersion = '6.+'

group = 'com.nugurang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    checkstyleConfig
}

repositories {
    mavenCentral()
}

diff.dependsOn compileJava
diffChangeLog.dependsOn compileJava
generateChangelog.dependsOn compileJava

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    checkstyleConfig("com.puppycrawl.tools:checkstyle:${checkstyleVersion}") {
        transitive = false
    }
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.google.guava:guava:29.+'
    implementation 'com.graphql-java:graphiql-spring-boot-starter:5.+'
    implementation 'com.graphql-java:graphql-java:14.+'
    implementation 'com.graphql-java:graphql-java-extended-scalars:1.+'
    implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:1.+'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.+'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

checkstyle {
    toolVersion = checkstyleVersion
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

checkstyleTest {
    enabled = false
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

pmd {
    toolVersion = pmdVersion
    consoleOutput = true
    ignoreFailures = true
    reportsDir = file("${buildDir}/reports/pmd")
}
 
tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
